<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="community.mapper">  

<delete id="delete">
	delete from MASTER_WEB_BOARD_TBL where id = #{id}
</delete>


<update id="update">
      UPDATE MASTER_WEB_BOARD_TBL SET TITLE = #{title}, CONTENT = #{content}, WEB_FILE = #{web_file, jdbcType=VARCHAR}, WEB_PATH = #{web_path, jdbcType=VARCHAR} 
      WHERE ID = #{id}
   </update>


<select id="detail" resultType="community.CommunityVO">
	select board.*
      from 
         (select b.*, 
            lag(id, 1, 0) over (order by id desc) as prev,
            lag(title, 1, '이전글 없음') over (order by id desc) as prev_title,            
            lead(id, 1, 0) over (order by id desc) as next,
            lead(title, 1, '다음글 없음') over (order by id desc) as next_title         
          from MASTER_WEB_BOARD_TBL b
          order by id desc) board
      where id = #{id}
</select>


<update id="count">
	UPDATE MASTER_WEB_BOARD_TBL SET CNT = CNT+1 WHERE ID = #{id}
</update>


<insert id="insert">   <!-- 답글 기능 추가하면서 ROOT 추가함 -->
      INSERT INTO MASTER_WEB_BOARD_TBL (ID, TITLE, CONTENT,CNT,WEB_DATE, USER_ID, WEB_FILE, WEB_PATH)
      VALUES ( seq_board.NEXTVAL, #{title}, #{content},0,sysdate, #{user_id}, #{web_file, jdbcType=VARCHAR}, #{web_path, jdbcType=VARCHAR} )
</insert>
  

<select id="list" resultType="community.CommunityVO">
	select * 
	from ( select rownum no , b.* 
			from (select * from MASTER_WEB_BOARD_TBL <include refid="where_search" />
					order by id) b			
			order by no desc )		
	where no between #{beginList} and #{endList}
</select>


<!-- 해당글의 댓글 목록 조회 -->
<select id="comment_list" resultType="community.CommunityCommentVO">
	select c.*, (select name from s_member where id = c.writer ) name 
	from board_comment c
	where pid = #{pid}
	order by id desc
</select>


<select id="totalList" resultType="integer">
	select count(*) from MASTER_WEB_BOARD_TBL <include refid="where_search" />
</select>


<select id="islist" resultType="integer">
	select count(*) from MASTER_WEB_BOARD_TBL 
</select>


<sql id="where_search">
	<if test="search =='title' or search == 'content' ">
		where ${search} like '%'||#{keyword}||'%'
	</if>
	
	<if test="search == 'writer' ">
		where <include refid="search_writer"/>
		<!-- where user_id in ( select id from MASTER_WEB_BOARD_TBL where name like '%'||#{keyword}||'%'  ) -->
	</if>
	<if test="search == 'all' ">
		where title like '%'||#{keyword}||'%'
		or content like '%'||#{keyword}||'%'
		or <include refid="search_writer"/>
		or writer in ( select id from MASTER_WEB_BOARD_TBL where name like '%'||#{keyword}||'%'  )
	</if>
</sql>


<sql id="search_writer">
	user_id in ( select id from MASTER_USER_INFO_TBL where user_id like '%'||#{keyword}||'%'  )
</sql>





<!-- 



댓글 저장 처리 _ 내용, 작성자, 원글정보를 저장
<insert id="comment_insert">
	insert into board_comment (content, writer, pid)
	values( #{content}, #{writer}, #{pid} )
</insert>



해당 방명록 글 수정 저장처리
<update id="update">
	update board set title = #{title}, content = #{content}
							, filename = #{filename, jdbcType=VARCHAR}
							, filepath = #{filepath, jdbcType=VARCHAR}
	where id = #{id}							
</update>






해당 id 글의 조회수 증가
<update id="read">
	update board set readcnt = readcnt + 1
	where id = #{id}
</update>



해당 id글의 상세정보 조회
<select id="detail" resultType="board.BoardVO">
	select b.*, (select name from s_member where id = b.writer) name
	from 
		(select board.*,
			lag(id, 1, 0) over (order by id desc) as prev,
			lag(title, 1, '이전글 업뜸') over (order by id desc) as prev_title,
			lead(id, 1, 0) over (order by id desc) as next,
			lead(title, 1, '다음글 없뜸') over (order by id desc) as next_title
		 from board
		 order by id desc) b
	where id = #{id}
</select>
쿼리문 분석 함수 중 lag(이전 로우의 값 반환), lead(이후 로우의 값 반환)
	 형식) lag(expr, offset, default) over (order by 절)
	 의미) lag 함수는 계산 대상 데이터(로우)들을 order by 절로 정렬하여
	 	epxr 에 명시된 값을 기준으로 이전 로우의 값을 반환함.
	 	offset(생략 가능, 기본값 1)






방명록 신규 글 저장
<insert id="insert">
	insert into board (title, content, writer, filename, filepath)
	values (#{title},#{content}
		,#{writer, jdbcType=VARCHAR},#{filename, jdbcType=VARCHAR},#{filepath, jdbcType=VARCHAR})
</insert>


페이징 처리된 글 목록 조회
<select id="list" resultType="board.BoardVO">
	select * 
	from ( select rownum no , b.*, (select name from s_member where id = b.writer )  name 
			from (select * from board <include refid="where_search" />
					order by id) b			
			order by no desc )		최신순서대로 정렬
	where no between #{beginList} and #{endList}
</select>




전체 게시글 수 조회
<select id="totalList" resultType="integer">
	select count(*) from board <include refid="where_search" />
</select>


 -->
 
 
</mapper>